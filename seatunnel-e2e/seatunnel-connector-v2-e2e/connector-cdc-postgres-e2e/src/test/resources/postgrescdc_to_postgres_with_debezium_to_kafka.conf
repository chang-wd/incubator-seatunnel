#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


env {
  # You can set engine configuration here
  execution.parallelism = 1
  job.mode = "STREAMING"
  read_limit.bytes_per_second = 7000000
  read_limit.rows_per_second = 400
  checkpoint.interval = 5000
}

source {
  Postgres-CDC {
    plugin_output = "customers_postgres_cdc"
    username = "postgres"
    password = "postgres"
    database-names = ["postgres_cdc"]
    schema-names = ["inventory"]
    table-names = ["postgres_cdc.inventory.full_types_no_primary_key_with_debezium"]
    url = "jdbc:postgresql://postgres_cdc_e2e:5432/postgres_cdc?loggerLevel=OFF"
    decoding.plugin.name = "decoderbufs"
    exactly_once = true
    table-names-config = [
      {
        table = "postgres_cdc.inventory.full_types_no_primary_key_with_debezium"
        primaryKeys = ["id"]
      }
    ]
    format = "compatible_debezium_json"
    debezium = {
      "key.converter.schemas.enable": false,
      "value.converter.schemas.enable": false
    }
  }
}

transform {

}

sink {
  kafka {
    topic = "debezium_json_topic"
    bootstrap.servers = "kafka_e2e:9092"
    format = compatible_debezium_json
    debezium = {
      "key.converter.schemas.enable": false,
      "value.converter.schemas.enable": false
    }
  }
}