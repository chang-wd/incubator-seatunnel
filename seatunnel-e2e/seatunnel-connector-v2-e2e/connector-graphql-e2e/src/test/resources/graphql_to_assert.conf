#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
######
###### This config file is a demonstration of streaming processing in seatunnel config
######

env {
  parallelism = 1
  job.mode = "BATCH"
}

source {
    GraphQL {
        plugin_output = "http"
        url = "http://graphql:8080/v1/graphql"
        format = "json"
        content_field = "$.data.source"
        query = """
            query MyQuery($limit: Int) {
                source(limit: $limit) {
                    id
                    val_bool
                    val_double
                    val_float
                }
            }
        """
        variables = {
            limit = 2
        }
        schema = {
            fields {
               id = "int"
               val_bool = "boolean"
               val_double = "double"
               val_float = "float"
            }
        }
    }
}

sink {
      Assert {
        plugin_input = http
        rules {
          field_rules = [
            {
              field_name = id
              field_type = int
              field_value = [
                {
                  rule_type = NOT_NULL
                }
              ]
            },
            {
              field_name = val_bool
              field_type = boolean
              field_value = [
                {
                  rule_type = NOT_NULL
                }
              ]
            },
            {
              field_name = val_double
              field_type = double
              field_value = [
                {
                  rule_type = NOT_NULL
                }
              ]
            },
            {
              field_name = val_float
              field_type = float
              field_value = [
                {
                  rule_type = NOT_NULL
                }
              ]
            }
          ]
        }
      }
}
