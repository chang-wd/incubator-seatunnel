#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
######
###### This config file demonstrates DataValidator transform with ROUTE_TO_TABLE mode
###### Invalid data will be routed to error table instead of being skipped or failing
######

env {
  job.mode = "BATCH"
  parallelism = 1
}

source {
  FakeSource {
    plugin_output = "fake"
    row.num = 10
    schema = {
      fields {
        id = "int"
        name = "string"
        age = "int"
        email = "string"
      }
    }
    rows = [
      {fields = [1, "John Doe", 25, "john@example.com"], kind = INSERT}
      {fields = [2, "Jane Smith", 30, "jane@example.com"], kind = INSERT}
      {fields = [3, "Charlie Wilson", 32, "charlie@example.com"], kind = INSERT}
      {fields = [4, null, 30, "invalid@example.com"], kind = INSERT}  # Invalid: null name
      {fields = [5, "Bob Johnson", 200, "bob@example.com"], kind = INSERT}  # Invalid: age > 150
      {fields = [6, "Alice Brown", 28, "invalid-email"], kind = INSERT}  # Invalid: bad email format
    ]
  }
}

transform {
  DataValidator {
    plugin_input = "fake"
    plugin_output = "validated"
    row_error_handle_way = "ROUTE_TO_TABLE"
    row_error_handle_way.error_table = "error_data"
    field_rules = [
      {
        field_name = "name"
        rule_type = "NOT_NULL"
      },
      {
        field_name = "age"
        rule_type = "RANGE"
        min_value = "0"
        max_value = "150"
      },
      {
        field_name = "email"
        rule_type = "REGEX"
        pattern = "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
      }
    ]
  }
}

sink {
  Assert {
    plugin_input = "validated"
    rules = {
      tables_configs = [
        {
          table_path = "fake"
          row_rules = [
            {
              rule_type = MIN_ROW
              rule_value = 3
            },
            {
              rule_type = MAX_ROW
              rule_value = 3
            }
          ],
          field_rules = [
            {
              field_name = id
              field_type = int
              field_value = [
                {
                  rule_type = NOT_NULL
                }
              ]
            },
            {
              field_name = name
              field_type = string
              field_value = [
                {
                  rule_type = NOT_NULL
                }
              ]
            },
            {
              field_name = age
              field_type = int
              field_value = [
                {
                  rule_type = NOT_NULL
                }
              ]
            },
            {
              field_name = email
              field_type = string
              field_value = [
                {
                  rule_type = NOT_NULL
                }
              ]
            }
          ]
        },
        {
          table_path = "error_data"
          row_rules = [
            {
              rule_type = MIN_ROW
              rule_value = 3
            },
            {
              rule_type = MAX_ROW
              rule_value = 3
            }
          ],
          field_rules = [
            {
              field_name = source_table_id
              field_type = string
              field_value = [
                {
                  rule_type = NOT_NULL
                }
              ]
            },
            {
              field_name = original_data
              field_type = string
              field_value = [
                {
                  rule_type = NOT_NULL
                }
              ]
            },
            {
              field_name = validation_errors
              field_type = string
              field_value = [
                {
                  rule_type = NOT_NULL
                }
              ]
            }
          ]
        }
      ]
    }
  }
}
