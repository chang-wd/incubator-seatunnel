/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import org.apache.seatunnel.api.table.catalog.Column
import org.apache.seatunnel.api.table.catalog.CatalogTable
import org.apache.seatunnel.api.table.catalog.PhysicalColumn
import org.apache.seatunnel.api.table.`type`.SeaTunnelRowAccessor
import org.apache.seatunnel.api.table.`type`.BasicType
import java.util.ArrayList

class ScalaDemo {
  def getInlineOutputColumns(inputCatalogTable: CatalogTable): Array[Column] = {
    val columns = new ArrayList[Column]()
    val destColumn = PhysicalColumn.of(
      "scala_col",
      BasicType.STRING_TYPE,
      10L,
      true,
      "",
      ""
    )
    columns.add(destColumn)
    columns.toArray(new Array[Column](0))
  }

  def getInlineOutputFieldValues(inputRow: SeaTunnelRowAccessor): Array[Object] = {
    val fieldValues = new Array[Object](1)
    fieldValues(0) = "SCALA_TEST"
    fieldValues
  }
}
